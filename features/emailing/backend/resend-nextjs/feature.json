{
  "id": "emailing-backend-resend-nextjs",
  "name": "Email Capability (Resend + NextJS)",
  "description": "Complete email sending backend with Resend and NextJS",
  "type": "capability",
  "version": "1.0.0",
  "provides": [
    "emailing-api",
    "emailing-business-logic",
    "emailing-templates",
    "emailing-campaigns"
  ],
  "role": "backend-feature",
  "pattern": "custom-logic",
  "contract": {
    "hooks": {
      "useEmails": {
        "parameters": [],
        "returnType": "unknown",
        "isAsync": true,
        "isMutation": true,
        "isQuery": true
      },
      "useTemplates": {
        "parameters": [],
        "returnType": "unknown",
        "isAsync": true,
        "isMutation": true,
        "isQuery": true
      },
      "useCampaigns": {
        "parameters": [],
        "returnType": "unknown",
        "isAsync": true,
        "isMutation": true,
        "isQuery": true
      },
      "useAnalytics": {
        "parameters": [],
        "returnType": "unknown",
        "isAsync": true,
        "isMutation": false,
        "isQuery": true
      }
    },
    "types": {
      "EmailStatus": {
        "definition": "| 'draft' \n  | 'sending' \n  | 'sent' \n  | 'delivered' \n  | 'failed'",
        "isEnum": false,
        "isInterface": false,
        "isTypeAlias": true
      },
      "EmailPriority": {
        "definition": "| 'low' \n  | 'normal' \n  | 'high' \n  | 'urgent'",
        "isEnum": false,
        "isInterface": false,
        "isTypeAlias": true
      },
      "EmailType": {
        "definition": "| 'transactional' \n  | 'marketing' \n  | 'notification' \n  | 'newsletter' \n  | 'welcome' \n  | 'reminder'",
        "isEnum": false,
        "isInterface": false,
        "isTypeAlias": true
      },
      "TemplateType": {
        "definition": "| 'html' \n  | 'text'",
        "isEnum": false,
        "isInterface": false,
        "isTypeAlias": true
      },
      "Email": {
        "definition": "export interface Email {\n  id: string;\n  subject: string;\n  content: EmailContent;\n  recipients: EmailRecipient[];\n  status: EmailStatus;\n  priority: EmailPriority;\n  type: EmailType;\n  templateId?: string;\n  campaignId?: string;\n  scheduledAt?: string;\n  sentAt?: string;\n  deliveredAt?: string;\n  openedAt?: string;\n  clickedAt?: string;\n  bouncedAt?: string;\n  metadata?: Record<string, any>;\n  createdAt: string;\n  updatedAt: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "EmailRecipient": {
        "definition": "export interface EmailRecipient {\n  email: string;\n  name?: string;\n  type: 'to' | 'cc' | 'bcc';\n  status: EmailStatus;\n  deliveredAt?: string;\n  openedAt?: string;\n  clickedAt?: string;\n  bouncedAt?: string;\n  errorMessage?: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "EmailContent": {
        "definition": "export interface EmailContent {\n  html?: string;\n  text?: string;\n  attachments?: EmailAttachment[];\n  inlineImages?: Array<{\n    cid: string;\n    url: string;\n  }>;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "EmailAttachment": {
        "definition": "export interface EmailAttachment {\n  id: string;\n  filename: string;\n  contentType: string;\n  size: number;\n  url: string;\n  createdAt: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "EmailTemplate": {
        "definition": "export interface EmailTemplate {\n  id: string;\n  name: string;\n  description?: string;\n  type: TemplateType;\n  subject: string;\n  content: {\n    html?: string;\n    text?: string;\n    variables: string[];\n  };\n  category: string;\n  tags: string[];\n  isPublic: boolean;\n  usageCount: number;\n  lastUsedAt?: string;\n  metadata?: Record<string, any>;\n  createdAt: string;\n  updatedAt: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "EmailCampaign": {
        "definition": "export interface EmailCampaign {\n  id: string;\n  name: string;\n  description?: string;\n  templateId: string;\n  status: 'draft' | 'scheduled' | 'running' | 'paused' | 'completed' | 'cancelled';\n  recipients: EmailRecipient[];\n  scheduledAt?: string;\n  startedAt?: string;\n  completedAt?: string;\n  analytics: EmailAnalytics;\n  settings: {\n    trackOpens: boolean;\n    trackClicks: boolean;\n    trackUnsubscribes: boolean;\n    maxRecipients: number;\n  };\n  metadata?: Record<string, any>;\n  createdAt: string;\n  updatedAt: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "EmailAnalytics": {
        "definition": "export interface EmailAnalytics {\n  emailsSent: number;\n  emailsDelivered: number;\n  emailsOpened: number;\n  emailsClicked: number;\n  emailsBounced: number;\n  emailsFailed: number;\n  openRate: number;\n  clickRate: number;\n  bounceRate: number;\n  unsubscribeCount: number;\n  topLinks: Array<{\n    url: string;\n    clicks: number;\n  }>;\n  topRecipients: Array<{\n    email: string;\n    opens: number;\n    clicks: number;\n  }>;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "SendEmailData": {
        "definition": "export interface SendEmailData {\n  subject: string;\n  content: EmailContent;\n  recipients: Omit<EmailRecipient, 'status' | 'deliveredAt' | 'openedAt' | 'clickedAt' | 'bouncedAt' | 'errorMessage'>[];\n  priority?: EmailPriority;\n  type?: EmailType;\n  templateId?: string;\n  scheduledAt?: string;\n  metadata?: Record<string, any>;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "SendBulkEmailData": {
        "definition": "export interface SendBulkEmailData {\n  subject: string;\n  content: EmailContent;\n  recipients: Omit<EmailRecipient, 'status' | 'deliveredAt' | 'openedAt' | 'clickedAt' | 'bouncedAt' | 'errorMessage'>[];\n  priority?: EmailPriority;\n  type?: EmailType;\n  templateId?: string;\n  scheduledAt?: string;\n  batchSize?: number;\n  delayBetweenBatches?: number;\n  metadata?: Record<string, any>;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "CreateTemplateData": {
        "definition": "export interface CreateTemplateData {\n  name: string;\n  description?: string;\n  type: TemplateType;\n  subject: string;\n  content: {\n    html?: string;\n    text?: string;\n    variables: string[];\n  };\n  category: string;\n  tags: string[];\n  isPublic?: boolean;\n  metadata?: Record<string, any>;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "UpdateTemplateData": {
        "definition": "export interface UpdateTemplateData {\n  name?: string;\n  description?: string;\n  subject?: string;\n  content?: {\n    html?: string;\n    text?: string;\n    variables?: string[];\n  };\n  category?: string;\n  tags?: string[];\n  isPublic?: boolean;\n  metadata?: Record<string, any>;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "CreateCampaignData": {
        "definition": "export interface CreateCampaignData {\n  name: string;\n  description?: string;\n  templateId: string;\n  recipients: Omit<EmailRecipient, 'status' | 'deliveredAt' | 'openedAt' | 'clickedAt' | 'bouncedAt' | 'errorMessage'>[];\n  scheduledAt?: string;\n  settings?: {\n    trackOpens?: boolean;\n    trackClicks?: boolean;\n    trackUnsubscribes?: boolean;\n    maxRecipients?: number;\n  };\n  metadata?: Record<string, any>;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "UpdateCampaignData": {
        "definition": "export interface UpdateCampaignData {\n  name?: string;\n  description?: string;\n  templateId?: string;\n  recipients?: Omit<EmailRecipient, 'status' | 'deliveredAt' | 'openedAt' | 'clickedAt' | 'bouncedAt' | 'errorMessage'>[];\n  scheduledAt?: string;\n  settings?: {\n    trackOpens?: boolean;\n    trackClicks?: boolean;\n    trackUnsubscribes?: boolean;\n    maxRecipients?: number;\n  };\n  metadata?: Record<string, any>;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "SendEmailResult": {
        "definition": "export interface SendEmailResult {\n  email: Email;\n  success: boolean;\n  message?: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "SendBulkEmailResult": {
        "definition": "export interface SendBulkEmailResult {\n  emails: Email[];\n  success: boolean;\n  message?: string;\n  totalSent: number;\n  totalFailed: number;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "TemplateResult": {
        "definition": "export interface TemplateResult {\n  template: EmailTemplate;\n  success: boolean;\n  message?: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "CampaignResult": {
        "definition": "export interface CampaignResult {\n  campaign: EmailCampaign;\n  success: boolean;\n  message?: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "EmailFilters": {
        "definition": "export interface EmailFilters {\n  status?: EmailStatus[];\n  type?: EmailType[];\n  priority?: EmailPriority[];\n  templateId?: string;\n  campaignId?: string;\n  dateFrom?: string;\n  dateTo?: string;\n  search?: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "TemplateFilters": {
        "definition": "export interface TemplateFilters {\n  type?: TemplateType[];\n  category?: string[];\n  tags?: string[];\n  isPublic?: boolean;\n  search?: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "CampaignFilters": {
        "definition": "export interface CampaignFilters {\n  status?: ('draft' | 'scheduled' | 'running' | 'paused' | 'completed' | 'cancelled')[];\n  templateId?: string;\n  dateFrom?: string;\n  dateTo?: string;\n  search?: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "AnalyticsFilters": {
        "definition": "export interface AnalyticsFilters {\n  dateFrom?: string;\n  dateTo?: string;\n  type?: EmailType[];\n  templateId?: string;\n  campaignId?: string;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "EmailingError": {
        "definition": "export interface EmailingError {\n  code: string;\n  message: string;\n  type: 'validation_error' | 'template_error' | 'delivery_error' | 'quota_error';\n  field?: string;\n  details?: Record<string, any>;\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "EmailingConfig": {
        "definition": "export interface EmailingConfig {\n  provider: {\n    name: string;\n    apiKey: string;\n    fromEmail: string;\n    fromName: string;\n  };\n  features: {\n    templates: boolean;\n    campaigns: boolean;\n    analytics: boolean;\n    scheduling: boolean;\n    attachments: boolean;\n  };\n  limits: {\n    maxRecipientsPerEmail: number;\n    maxAttachmentsPerEmail: number;\n    maxAttachmentSize: number;\n    dailyEmailLimit: number;\n    monthlyEmailLimit: number;\n  };\n  security: {\n    requireEmailVerification: boolean;\n    allowUnsubscribe: boolean;\n    trackUserActivity: boolean;\n  };\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      },
      "IEmailService": {
        "definition": "export interface IEmailService {\n  /**\n   * Email Management Service\n   * Provides all email-related operations in a cohesive interface\n   */\n  useEmails: () => {\n    // Query operations\n    list: any; // UseQueryResult<Email[], Error>\n    get: (id: string) => any; // UseQueryResult<Email, Error>\n    \n    // Mutation operations\n    send: any; // UseMutationResult<SendEmailResult, Error, SendEmailData>\n    sendBulk: any; // UseMutationResult<SendBulkEmailResult, Error, SendBulkEmailData>\n    delete: any; // UseMutationResult<void, Error, string>\n    bulkDelete: any; // UseMutationResult<void, Error, string[]>\n    resend: any; // UseMutationResult<SendEmailResult, Error, string>\n  };\n\n  /**\n   * Template Management Service\n   * Provides all email template-related operations in a cohesive interface\n   */\n  useTemplates: () => {\n    // Query operations\n    list: any; // UseQueryResult<EmailTemplate[], Error>\n    get: (id: string) => any; // UseQueryResult<EmailTemplate, Error>\n    \n    // Mutation operations\n    create: any; // UseMutationResult<TemplateResult, Error, CreateTemplateData>\n    update: any; // UseMutationResult<TemplateResult, Error, { id: string; data: UpdateTemplateData }>\n    delete: any; // UseMutationResult<void, Error, string>\n    duplicate: any; // UseMutationResult<TemplateResult, Error, string>\n  };\n\n  /**\n   * Campaign Management Service\n   * Provides all email campaign-related operations in a cohesive interface\n   */\n  useCampaigns: () => {\n    // Query operations\n    list: any; // UseQueryResult<EmailCampaign[], Error>\n    get: (id: string) => any; // UseQueryResult<EmailCampaign, Error>\n    \n    // Mutation operations\n    create: any; // UseMutationResult<CampaignResult, Error, CreateCampaignData>\n    update: any; // UseMutationResult<CampaignResult, Error, { id: string; data: UpdateCampaignData }>\n    delete: any; // UseMutationResult<void, Error, string>\n    start: any; // UseMutationResult<CampaignResult, Error, string>\n    pause: any; // UseMutationResult<CampaignResult, Error, string>\n    cancel: any; // UseMutationResult<CampaignResult, Error, string>\n  };\n\n  /**\n   * Analytics Service\n   * Provides email analytics and reporting\n   */\n  useAnalytics: () => {\n    // Query operations\n    getEmailAnalytics: (filters?: AnalyticsFilters) => any; // UseQueryResult<EmailAnalytics, Error>\n    getTemplateAnalytics: (templateId: string) => any; // UseQueryResult<EmailAnalytics, Error>\n    getCampaignAnalytics: (campaignId: string) => any; // UseQueryResult<EmailAnalytics, Error>\n  };\n}",
        "isEnum": false,
        "isInterface": true,
        "isTypeAlias": false
      }
    }
  },
  "provides": [
    "email"
  ],
  "requiresCapabilities": [
    {
      "category": "database",
      "optional": false,
      "reason": "Store email history, templates, campaigns, and delivery analytics"
    },
    {
      "category": "auth",
      "optional": false,
      "reason": "Get user email addresses and link emails to authenticated users"
    }
  ],
  "requires": [
    "framework/nextjs",
    "email/resend"
  ],
  "parameters": {
    "bulkEmail": {
      "name": "Bulk Email",
      "description": "Bulk email sending capabilities",
      "type": "boolean",
      "default": false
    },
    "templates": {
      "name": "Email Templates",
      "description": "Email template management",
      "type": "boolean",
      "default": true
    },
    "analytics": {
      "name": "Email Analytics",
      "description": "Email delivery and engagement analytics",
      "type": "boolean",
      "default": false
    },
    "webhooks": {
      "name": "Webhooks",
      "description": "Email event webhooks",
      "type": "boolean",
      "default": false
    },
    "organizations": {
      "name": "Organization Support",
      "description": "Enable organization-scoped email management",
      "type": "boolean",
      "default": false,
      "prerequisites": ["auth-organizations"]
    },
    "teams": {
      "name": "Team Support",
      "description": "Enable team-scoped email management",
      "type": "boolean",
      "default": false,
      "prerequisites": ["auth-teams"]
    }
  }
}